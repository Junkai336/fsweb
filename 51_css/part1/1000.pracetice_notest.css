/*  00  */

/* 

Cascading Style Sheet
- 태그를 디자인
- 우선순위: 폭포식. 위에서 아래
- 위에쓴건 아래에도 적용되는 듯?
- 아래에 쓴건 우선순위가 높다?
 */


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
/*  01 선언방식 */

/* <

    형식 
    - 선택자 {
        속성: 값;
        속성: 값;
    }
    - 선택자 {속성: 값; 속성: 값;}

  */

/* 
인라인 CSS
- HTML 태그에 직접 기록
- <p style="속성:값;"> style 속성에 CSS의 속성 값 기록 </p>

내부 CSS
- <style> HTML파일의 style 사이에 기록 </style>

외부 CSS
- title밑 /head위
- <link> 태그로 css파일 연결
<link rel="stylesheet" href="../../70_project/css/main.css">


link와 style은 head의 자식

인라인 > 내부 > 외부 우선순위 인듯?
 */

/* 
     W3C: HTML CSS 섞어쓰지 말자 

    CSS속성: Property
    HTML속성: Attribute
  -->  */

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
/*  02 id class 요소 */

/* 
    우선순위
        - id > class > 요소(element)
        -  #     .     p,a,img..

        - !important > 인라인css > id,class,요소
    */

/* 
        id는 똑같은 값 X
        class는 똑같은 값 O

        id 속성 값을 하나 이상 지정 X
        class 속성 값을 하나 이상 지정 O = class="값1 값2 값3"
    */

#p {
  color: blue;
}

.p {
  color: blue;
}

p {
  color: blue;
}


  {
  border,
  outline solid(실선),
  dotted(점선),
  dashed(대시선);
}

/* 
        CSS 선택자(Selector)
        1.요소 선택자: 전체, 그룹, id, class, 요소
          - HTML 태그 이름으로 지정  
        2.복합 : 부모 자식 형제
        3.의사 클래스 : :link, :visited, :hover, :detective
          (Pseudo, 슈도, 가상, 가짜, 유사)
        4.의사 요소: ::before, ::after
        5.속성: .div
        */

/* 
       <p style="color:black">aaa</p> 
       */

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
/* <02-1,1-1 그룹,범용 */


/* 그룹 선택자 : 속성 값이 같은 경우 */
html,
body,
h1,
h2 {
  color: red;
}

/* 범용 선택자: Universal / 전체 선택 */
* {
  margin: 0;
  padding: 0;
}

/* 범용 선택자를 쓰면 시스템 자원 낭비 현상(시스템 리소스 많이 차지)가 있음 */
html {
  margin: 0;
  padding: 0;
}

body {
  margin: 0;
  padding: 0;
}

html,
body,
ul,
p {
  margin: 0;
  padding: 0;
}

/* 패딩유무는 border를 쓰면 알 수 있다. */

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

/* 02-2, 02-3 자손 자식 형제 */

/* 
  복합선택자: 선택자 2개 사용
    1.후손(하위, 자손) 선택자: 공백
      조상 자손 O
      부모 자식 O

    2.자식             선택자: >
      조상 > 자손 X
      부모 > 자식 O
*/

/* 
  형제 선택자
    1. 일반형제선택자: ~
      - Tilde, 틸더
      - 선택자1 ~ 선택자2
      -  형요소    제요소
      - 선택자1 아래 있는 모든 형제 요소를 가리킨다.

    2. 인접형제선택자: +
      - 선택자1 + 선택자2
      -  형요소    인접한 제요소
      - 선택자1 바로 아래 있는 형제 요소를 하나 선택한다.
        (다른 요소로 막혀있으면 선택 안됨)

        p
        div
        p <- ~는 적용 O / +는 적용 X 

        형요소 -> 제요소 로만 적용되고
        제요소 -> 형요소 는 적용 안되는 듯

        */
        
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

/* 02-4,5,6,7,8 의사클래스 */

/* 
  의사 클래스
    - 콜론(:)

    :link - 방문전
    :visited - 방문후
    :hover - 마우스 올린 경우
    :active - 마우스로부터 눌린 경우

    4개의 선택자 함께 사용시
    :link -> :visited -> :hover -> :active 순으로 기록



    :checked


    
    :only-child : 자식(child) 요소를 단 하나만 가지는 모든 요소의 자식 선택
    :first-child : 모든 자식 요소 중 첫번째 자식 요소 모두 선택
    :last-child : 모든 자식 요소 중 마지막에 위치하는 자식 요소 모두 선택
    :nth-child(n) : 모든 자식 요소 중 앞에서부터 n번째 위치하는 자식 요소 모두 선택
    :nth-last-child(n) : 모든 자식 요소 중 뒤에서부터 n번째 위치하는 자식 요소 모두 선택

    n = 1, 2, 3, 2n-1, 2n, 3n, odd, even
    홀수: 1, 3, 2n-1, odd
    짝수: 2, 4, 2n, even
    2n = 2, 4, 6, 8..




*/