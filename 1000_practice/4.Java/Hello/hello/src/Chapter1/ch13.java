public class ch13 {
    
}

/* 
 * 
 * Object 타입
 *  - public Object 필드명;
 *  - 모든 클래스의 최상위 부모 클래스
 *  - 모든 객체는 부모 타입인 Object로 자동 타입 변환 되므로 Object 필드에는 어떤 객체든 대입이 가능하다.
 *  - 대입된 내용물 타입을 안다면 강제타입변환으로 내용물을 얻을 수 있다.
 * 
 * 제네릭
 *  - 결정되지 않은 타입을 파라미터로 처리하고, 실제 사용할 때 파라미터를 구체적인 타입으로 대체시키는 기능
 *  - public class 클래스명 <타입파라미터> {
 *      public 타입파라미터 필드명;
 * }
 *  - <타입파라미터> : 타입이 필요한 자리에 사용할 수 있음. 필드의 타입으로 사용. 타입파라미터의 타입은 모르지만, 객체가 생성될 시점에 다른 타입으로 대체된다.
 *                     타입파라미터의 내용물을 String으로 저장하고 싶다면, 클래스 생성시 타입파라미터 대신 String으로 대체하면 된다.
 *  ex) 
 * public class Box <T> { public T content; }
 * Box<String> box = new Box<String>();
 * box.content = "문자열";
 * String content = box.content;
 * 
 * - 타입파라미터 T는 단지 이름일 뿐이기 때문에 A~Z까지 어떤 알파벳을 사용해도 된다.
 * - 타입파라미터를 대체하는 타입은 클래스 및 인터페이스다. (기본타입은 안되고 참조타입으로 하라는 뜻인듯 int 말고 Integer)
 * 
 * 
 */