server.servlet.encoding.force-response=true

#h2연결
#고정 URL 설정
#spring.datasource.url=jdbc:h2:tcp://localhost/~/test
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=sa
#spring.jpa.hibernate.ddl-auto=create-drop
##한번 실행하고 난 다음 create-drop 에서 update로 바꾸기.
#spring.jpa.show-sql=true
#spring.sql.init.mode = always

#postgres연결
#고정 URL 설정
#spring.datasource.url=jdbc:postgresql://localhost:5432/firsrproject_db
#spring.datasource.username=postgres
#spring.datasource.password=postgres
# 데이터를 초기화할 경로
#spring.datasource.data=classpath:/data.sql
#spring.jpa.hibernate.ddl-auto=create-drop
##한번 실행하고 난 다음 create-drop 에서 update로 바꾸기.
#spring.jpa.show-sql=true
# 데이터를 매번 초기화
#spring.sql.init.mode = always

#mysql 연결
#고정 URL 설정
spring.datasource.url=jdbc:mysql://localhost:3306/firstproject_db?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#데이터를 초기화할 경로
spring.datasource.data=classpath:/data.sql
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
#데이터를 매번 초기화
spring.sql.init.mode=always

##mysql연결 XXXXX
##DB source URL
#spring.datasource.url=jdbc:mysql://localhost:3306/member?serverTimezone=UTC&characterEncoding=UTF-8
##mysql설정
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
## DB username
#spring.datasource.username=test
## DB password
#spring.datasource.password=1234
## true 설정시 JPA 쿼리문 확인 가능
## 데이터를 초기화 할 경로
#spring.datasource.data=classpath:/data.sql

#spring.sql.init.mode=always
#spring.jpa.show-sql=true
## DDL(create, alter, drop) 정의시 DB의 고유 기능을 사용할 수 있다.
#spring.jpa.hibernate.ddl-auto=update
## JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여준다.
##spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# h2db, 웹콘솔 설정
spring.h2.console.enabled = true

# data. sql 적용을 위한 설정(2.5이상)
spring.jpa.defer-datasource-initialization = true

# JPA 로깅 설정
## 디버그 레벨로 쿼리 출력
logging.level.org.hibernate.SQL = DEBUG
## 이쁘게 보여주기
spring.jpa.properties.hibernate.format_sql = true
## 파라미터 보여주기
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE